server:
  port: 9087
payService:
  address: ${PAY_SERVICE:http://localhost:9089}
spring:
  main:
    allow-bean-definition-overriding: true
  kafka:
    properties:
      topic: ordersToAnalyze
      spring:
        json:
          value:
            default:
              type: org.temkarus0070.orderpersistence.models.Order
    consumer:
      bootstrap-servers: ${KAFKA_SERVER:127.0.0.1:9092}
      group-id: group-id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer:  org.apache.kafka.common.serialization.LongSerializer
      properties:
        spring:
          json:
            add:
              type:
                headers: false
    bootstrap-servers: ${KAFKA_SERVER:127.0.0.1:9092}

  datasource:
    url: jdbc:postgresql://localhost:5432/Orders
    username: postgres
    password: postgres

  jpa:
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql

  application:
    name: orderPersistence

opentracing.jaeger:
  udp-sender:
    host: ${JAEGER_HOST:localhost}
    port: 6831
  log-spans: true



management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true